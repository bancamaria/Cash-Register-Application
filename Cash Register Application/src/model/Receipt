package model;

public class Receipt implements Comparable<Receipt> {
    private static int idNumber = 0;
    private final int id;
    private final int idRegister;
    private final int idCashier;
    private final int idCoupon;

    public enum Payment {CARD, CASH, MEALTICKET}

    public class payMethod {
        Payment pay;
        public payMethod(Payment pay) {
            this.pay = pay;
        }
    }

    public Receipt(int idRegister, int idCashier, int idCoupon, int payment) {
        this.id = idNumber++;
        this.idRegister = idRegister;
        this.idCashier = idCashier;
        this.idCoupon = idCoupon;
    }

    public int getId() {
        return id;
    }

    public int getIdRegister() {
        return idRegister;
    }

    public int getIdCashier() {
        return idCashier;
    }

    public int getIdCoupon() {
        return idCoupon;
    }

    @Override
    public boolean equals(Object ob) {
        if(this == ob)
            return true;
        if(ob == null || getClass() != ob.getClass())
            return false;
        Receipt receipt = (Receipt)ob;
        return id = receipt.id;
    }

    @Override
    public String toString() {
        return "Receipt{" + "id: " + id + ", register: " + registerId + ", cashier: " + cashierId + ", coupon: " + couponId + '}';
    }

    @Override
    public int compareTo(Receipt receipt) throws NullPointerException {
        if (receipt == null) {
            throw new NullPointerException();
        }
        return Integer.compare(id, receipt.id);
    }
}